/**
 * S-expression parser.
 *
 * 1. Install syntax-cli:
 *
 *   npm install -g syntax-cli
 *
 * 2. Generate the parser from this grammar:
 *
 *   syntax-cli -g parser/s-expression.bnf -m LALR1 -o lib/emagine/s_parser/yy_parse.rb
 *
 * Examples:
 *
 * Atom: 42, 42.0, foo, "Hello World"
 *
 * List: (), (add 5 x), (print "hello")
 */

// -----------------------------------------------
// Lexical grammar (tokens):

%lex

%%

\s+               return nil

\"[^\"]*\"        return 'STRING'

\'[^\']*\'        return 'STRING'

\-?\d+\.\d*       return 'FLOAT'

\-?\d+            return 'INTEGER'

\w+               return 'SYMBOL'


/lex

// -----------------------------------------------
// Syntactic grammar (BNF):

%%

Exp
    : Atom
    | List
    ;

Atom
    : INTEGER { $$ = $1.to_i }
    | FLOAT { $$ = $1.to_f }
    | STRING { $$ = $1[1..-2] }
    | SYMBOL { $$ = $1.to_sym }
    ;

List
    : '(' ListEntries ')' { $$ = $2 }
    ;

ListEntries
    : ListEntries Exp { $1.push($2); $$ = $1 }
    | /* empty */     { $$ = [] }
    ;
