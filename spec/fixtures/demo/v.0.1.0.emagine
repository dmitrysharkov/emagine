PUBLIC PACKAGE demo, '0.1.0' DO

    FROM base, '>=1.0.0' IMPORT TPositiveInteger
    FROM std.datetime AS IS IMPORT DO
        today
        period

    FROM std.tasks, '>=1.0.1' AS IS IMPORT oneOf

    FROM std.strings, '>=1.0.0' IMPORT concat

    PUBLIC PROCEDURE ProcSimpleWorkflow DO
        INTERFACE DO
            PARAMS CORTEGE DO
                TUPLE DO
                    REQUIRED $customerId AS TPositiveInteger
                STRUCT DO
                    OPTIONAL $maxMessages AS TPositiveInteger DEFAULT 5
                    OPTIONAL $daysBetweenMessages AS TPositiveInteger DEFAULT 3
            RETURNS STRUCT



        IMPLEMENTATION DO
            LET $i = 0
            LET $continue = TRUE
            WHILE ($i < $maxMessages) AND $continue
                $continue = EXEC ProcFetchCustomer($customerId) MAP filterCustomerState
                IF $continue
                    LET $templateName = concat("message-template-", $i + 1)

                    EXEC ProcSendMessageToCustomer($customerId, templateName: $templateName)

                    LET $nextMessageTime = std.datetime.today() + std.datetime.period(days: $daysBetweenMessages)

                    LET $waitForCustomerStatusChange = OBSERVE EvCustomerStatusChanged($customerId)
                    LET $waitForXDays = OBSERVE EvAlarmClock($nextMessageTime)

                    LET $waitForOne = std.tasks.oneOf($waitForCustomerStatusChange, $waitForXDays)

                    YIELD $waitForOne
                    $i = $i + 1

            LET x = CORTEGE TUPLE $a, $b, $c STRUCT a: $g, b: $c, c: 10

            LET x = STRUCT a: $g, b: $c, c: 1 DO
                e: ARRAY 1,2,3


    PRIVATE FUNCTION filterCustomerFields DO
        INTERFACE DO
            PARAMS STRUCT $active AS Boolean
            RETURNS Boolean
        IMPLEMENTATION
            RET $active


